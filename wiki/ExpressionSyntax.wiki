#summary Overview over the expression syntax of muParserX
= Value types =

Internally muparserx is using a variant style datatype which can represent values (complex or not), strings and matrices. 

= String values =
String values must be enclosed in quotation marks.
{{{
"This is a text"
}}}

muparserx can use the backslash character for escaping special characters. The following escape sequences are supported:

|| Escape sequence || Description ||
|| \n || newline ||
|| \r || carriage return ||
|| \t || tabulator  ||
|| \" || quote ||
|| \\ || backslash ||

Creating a string containing two lines easily:

{{{
"This is the first line\nthis is the second line"
}}}

Concatenating strings can be done with the operator "//":
{{{
"Hello "//"World"
}}}

= Complex numbers =

When used in complex mode, the parser defines a constant representing the imaginary unit i. This constant can be used exactly like any other variable with the exception that you can omit the '*' between 'i' and values. For instance defining a complex variable a can simply be achieved by using:

{{{
a=6+9i
}}}

is equivalent to

{{{
a=6+9*i
}}}

= Matrices and arrays =
Matrix and array values are exactly treated like any other value. The only exception is that they support the index operator. The index operator can either be one or two dimensional, depending on the dimension of the parser variable. When using the index operator on matrices the index dimensions are seperated with a colon. The first index refers to the rows of the matrix, the second to the columns.
{{{
m[1,2]=1
}}}